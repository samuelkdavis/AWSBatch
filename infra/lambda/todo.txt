

  TriggerFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref CloudToolsBucket
        S3Key: !Join [ "/", [ !Ref Release, "lambda/trigger.zip" ] ]
      Description: "Triggers AWS Batch when invoked"
      Environment: 
        Variables:
          JobQueue: !Ref QueueName
          JobDefinition: Start
      FunctionName: !Join ["",["BatchTrigger",!Ref Environment]]
      Handler: lambda_function.lambda_handler
      MemorySize: 128
      Role: !GetAtt [ LambdaTriggerIAMRole, Arn ]
      Runtime: python3.6
      Timeout: 60

  S3LambdaEvent:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt [ TriggerFunction, Arn ]
      SourceArn: !Join [ '', [ 'arn:aws:s3:::', "batch-poc-", !Ref 'AWS::AccountId','-', !Ref 'AWS::Region']]
      Action: 'lambda:InvokeFunction'
      Principal: s3.amazonaws.com
      SourceAccount: !Ref 'AWS::AccountId'


  TriggeredBucket:
    Type: 'AWS::S3::Bucket'
    Properties: 
      BucketName: !Join [ "-", [ "batch-poc", !Ref 'AWS::AccountId', !Ref 'AWS::Region' ] ]
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt [ TriggerFunction, Arn ]
    DependsOn: S3LambdaEvent